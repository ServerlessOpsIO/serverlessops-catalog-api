---
openapi: 3.0.3
info:
  title: serverlessops-catalog-api API
  description: ServerlessOps Catalog API for Backstage
  version: 1.0.0
servers:
  - url:
      Fn::Sub: "https://${Hostname}"
    description: Production endpoint
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: "all"

paths:
  "/health":
    get:
      summary: Health check
      description: Get health of endpoint
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json; charset=utf-8
      responses:
        '200':
          description: Success
      security:
        - serverlessOpsCognitoPool:
          - Fn::Sub: https://${Hostname}/health.read
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          "application/json": |
            {
              "statusCode": 200
            }
        responses:
          "200":
            statusCode: 200
            responseTemplates:
              "application/json": |
                {
                  "healthy": true
                }

components:
  parameters:
    pathEntityId:
      name: entity_id
      in: path
      required: true
      description: Requested Entity ID
      schema:
        type: string
    headerContentTypeJson:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json; charset=utf-8
  securitySchemes:
    serverlessOpsCognitoPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        providerARNs:
          - Ref: CognitoUserPoolArn
        type: COGNITO_USER_POOLS
        identitySource: method.request.header.Authorization
        identityValidationExpression: "^Bearer [^\\s]+$"
